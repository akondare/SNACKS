# Load MSB's and LSB's of float into R2 and R3
Assign 127
Set R0
Inc R0
Ld R2
Inc R0
Ld R3
Inc R0
Ld R4
Inc R0
Ld R5
Inc R0

# sign equivalence (s1+s2 << 7) = 0 if they are equivalent
Assign R2
Set R6
Assign R4
Set R7
Assign 7
Sr R6
Sr R7
Assign R7
Add R6
Assign 7
Sl R6

# get E of F1 and F2 into R7 and R8 respectively
Assign R2
Set R7
Assign R4
Set R8
Assign 1
Sl R7
Sl R8
Assign 3
Sr R7
Sr R8

# get R9:(E1-E2) and R10:(E2-E1), if R9>R10: EXP(A) greater, etc
Assign R7
Set R9
Assign R8
Set R10
Assign R8
Sub R9
Assign R7
Sub R10
Assign R9
Set r11
Assign R10
Sub R11

# skip to step 3 as E's are equal
Assign #TODO
Bz R11

# if sign = 1, R9 is negative meaning E2 > E1 
Assign 7
Sl R11
Assign #TODO
Bnz R11

### Starting E1 > E2
Assign R2
Set R12
Assign 7
Sr R12
Sl R12

# clear Sign and E of R4
Assign 6
Sl R4
Sr R4 

# right-shift R4-R5 by R9 Bits
# Copy r4 into r13
Assign R4
Set R13

# shift r4 and r5 by r9
Assign r9
Sr R2
Sr R3

# get (r9 # of) lsb's of r4 into r5's msbs
Assign 8
Set r14
Assign r9
Sub r13
Assign r13
Sl R8

# put lsb of r2 into msb of r3
Assign R8
Or R3


### Starting E2 > E1 Branch From Above
Assign R4
Set R12
Assign 7
Sr R12
Sl R12

## Return Code ## 
Assign R0
St #TODO
Inc R0
St #TODO
HALT
